openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /group/:
    get:
      operationId: listGroups
      description: ModelViewSet for a group model
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
    post:
      operationId: createGroup
      description: ModelViewSet for a group model
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
  /group/{id}/:
    get:
      operationId: retrieveGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
    put:
      operationId: updateGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
    patch:
      operationId: partialUpdateGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
    delete:
      operationId: destroyGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - group
  /group/{id}/events/:
    get:
      operationId: eventsGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
  /group/{id}/goals/:
    get:
      operationId: goalsGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
  /group/{id}/invite/:
    get:
      operationId: inviteGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
  /group/{id}/users/:
    get:
      operationId: usersGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
  /goal/:
    get:
      operationId: listGoals
      description: ModelViewSet for a goal model
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
    post:
      operationId: createGoal
      description: ModelViewSet for a goal model
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
  /goal/{id}/:
    get:
      operationId: retrieveGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
    put:
      operationId: updateGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
    patch:
      operationId: partialUpdateGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
    delete:
      operationId: destroyGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - goal
  /goal/{id}/events/:
    get:
      operationId: eventsGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
  /goal/{id}/reports/:
    get:
      operationId: reportsGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
  /duty/:
    get:
      operationId: listDuties
      description: ModelViewSet for a Duty model
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Duty'
          description: ''
      tags:
      - duty
  /duty/{id}/:
    get:
      operationId: retrieveDuty
      description: ModelViewSet for a Duty model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Duty'
          description: ''
      tags:
      - duty
  /report/:
    get:
      operationId: listReports
      description: ModelViewSet for a report model
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - report
    post:
      operationId: createReport
      description: ModelViewSet for a report model
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - report
  /report/{id}/:
    get:
      operationId: retrieveReport
      description: ModelViewSet for a report model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - report
    put:
      operationId: updateReport
      description: ModelViewSet for a report model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - report
    patch:
      operationId: partialUpdateReport
      description: ModelViewSet for a report model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
      tags:
      - report
    delete:
      operationId: destroyReport
      description: ModelViewSet for a report model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - report
  /events/:
    get:
      operationId: listEvents
      description: A view for handling events
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
          description: ''
      tags:
      - events
  /events/{id}/:
    get:
      operationId: retrieveEvent
      description: A view for handling events
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
      tags:
      - events
  /image/{id}/:
    get:
      operationId: retrieveImage
      description: ModelViewSet for a image model
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - image
    put:
      operationId: updateImage
      description: ModelViewSet for a image model
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - image
    patch:
      operationId: partialUpdateImage
      description: ModelViewSet for a image model
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - image
    delete:
      operationId: destroyImage
      description: ModelViewSet for a image model
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this image.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - image
  /auth/login/:
    post:
      operationId: loginAuth
      description: GenericViewSet for a auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Auth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
          description: ''
      tags:
      - auth
  /auth/logout/:
    post:
      operationId: logoutAuth
      description: GenericViewSet for a auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Auth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
          description: ''
      tags:
      - auth
  /auth/register/:
    post:
      operationId: registerAuth
      description: GenericViewSet for a auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Auth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
          description: ''
      tags:
      - auth
  /group/join/{token}/:
    post:
      operationId: joinTokenGroup
      description: ModelViewSet for a group model
      parameters:
      - name: token
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
  /group/{id}/join/:
    post:
      operationId: joinGroup
      description: ModelViewSet for a group model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - group
  /goal/{id}/confirm/:
    post:
      operationId: confirmGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
  /goal/{id}/delegate/:
    post:
      operationId: delegateGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
  /goal/{id}/distribute/:
    post:
      operationId: distributeGoal
      description: ModelViewSet for a goal model
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
      tags:
      - goal
  /image/:
    post:
      operationId: createImage
      description: ModelViewSet for a image model
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - image
components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tag:
          type: string
          maxLength: 50
        is_public:
          type: boolean
        name:
          type: string
          nullable: true
          maxLength: 50
        group_image:
          type: string
          format: binary
          writeOnly: true
      required:
      - tag
      - group_image
    Goal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        group:
          type: integer
        is_active:
          type: boolean
        deadline:
          type: string
          format: date-time
          nullable: true
        alert_period:
          type: string
          nullable: true
        final_value:
          type: integer
        current_value:
          type: string
          readOnly: true
      required:
      - name
      - group
      - final_value
    Duty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        goal:
          type: integer
        final_value:
          type: integer
        current_value:
          type: integer
        deadline:
          type: string
          format: date-time
          nullable: true
        alert_period:
          type: string
          nullable: true
      required:
      - goal
    Report:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        proof:
          type: string
          format: binary
          writeOnly: true
        text:
          type: string
          nullable: true
          maxLength: 1024
        goal:
          type: integer
      required:
      - proof
      - goal
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: integer
        text:
          type: string
          maxLength: 500
        timestamp:
          type: string
          format: date-time
        group:
          type: integer
          nullable: true
        goal:
          type: integer
          nullable: true
    Image:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: binary
        group:
          type: integer
          nullable: true
        report:
          type: integer
          nullable: true
    Auth:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        password:
          type: string
          maxLength: 128
      required:
      - username
      - password
